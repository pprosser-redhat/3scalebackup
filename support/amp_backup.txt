Backup MySQL DB

mysqldump --skip-lock-tables -h $SYSTEM_MYSQL_SERVICE_HOST -P $SYSTEM_MYSQL_SERVICE_PORT   -u $MYSQL_USER --password="$MYSQL_PASSWORD" --all-databases > all.sql

oc rsync  system-mysql-4-59q9r:/opt/app-root/src/ .

Backup both Redis servers using similer to example below

oc rsync backend-redis-3-fwn4m:/var/lib/redis/data/appendonly.aof .
oc rsync backend-redis-3-fwn4m:/var/lib/redis/data/dump.rdb .

oc rsync system-redis-3-pggbc:/var/lib/redis/data/dump.rdb .
oc rsync system-redis-3-pggbc:/var/lib/redis/data/appendonly.aof .

Backup Postgres zync DB
mkdir /var/lib/pgsql/data/backup
pg_dump -h 127.0.0.1 -U zync -d zync_production -f /var/lib/pgsql/data/backup/zync.sql
oc rsync zync-database-4-xmtgc:/var/lib/pgsql/data/backup/zync.sql .

Back up AMP

======= Might not need this - trying to re-create from 3SCale product template =======
oc export all -o yaml > project.yaml
oc get rolebindings -o yaml --export=true > rolebindings.yaml
oc get serviceaccount -o yaml --export=true > serviceaccount.yaml
oc get secret -o yaml --export=true > secret.yaml
oc get pvc -o yaml --export=true > pvc.yaml

Restore

oc new-project amp --description="3Scale API Management Platform"
oc create -f configmap.yml
oc create -f secret.yaml
oc create -f serviceaccount.yaml
oc create -f pvc.yaml
oc create -f rolebindings.yaml
oc new-app  --file project.yaml -p DOMAIN_NAME_SUFFIX=192.168.99.100.nip.io KEYSTORE_PASSWORD=blah



*
*
* If production gateway keeps falling over, make sure the Threescale_portal_endpoint uses token redhat12
* This is the old token for reference : 1rb4m5mb
*
*

Restore Mysql

Copy all.sql to mysql container :-

oc rsync ~/projects/demolab/3scalebackup/3Scale_backup/db_archive_dir system-mysql-1-qtgl7:/var/lib/mysql/data

oc rsh system-mysql-1-vkfgz

mysql -u root < /var/lib/mysql/data/db_archive_dir/all.sql
exit

=======================
MySQL back up seems restored - on to Redis next
=======================

Restore backend redis

oc rsync ~/projects/demolab/3scalebackup/3Scale_backup/backend_redis/data backend-redis-1-6jvxh:/var/lib/redis

Restore system redis

oc rsync ~/projects/demolab/3scalebackup/3Scale_backup/system_redis/data system-redis-1-8k29m:/var/lib/redis

restart both the backend redis, and rhe system redis

========================
Restore Zync Database 
========================

/var/lib/pgsql/data/backup
oc rsync ~/projects/demolab/3scalebackup/3Scale_backup/backup_zync_db/data/ zync-database-4-xmtgc:/var/lib/pgsql/data/backup/
oc rsh zync-database-4-xmtgc
psql -h 127.0.0.1 -U zync -d zync_production < /var/lib/pgsql/data/backup/data/zync.sql
========================
Update Gateway endpoints
========================

Need to update all service endpoints for the new environment

Token to use to perform updates

c373d6c0262d307aaae51dc7a102f53ec32d8f642f88a97687c8dfabac15d838

By way of example, we need to replace apps.demolab.local with 192.168.99.100.nip.io - we'll script this when we get to Ansible

Members Registration Service - service = 5

demolab original api end point - https://membersregistrationservice-3scale-apicast-production.apps.demolab.local:443

demolab original api back end = http://eap-app-membersapp.apps.demolab.local:80

Sandbox endpoint = https://membersregistrationservice-3scale-apicast-staging.apps.demolab.local:443

example urls for minishift based on above

https://membersregistrationservice-3scale-apicast-production.192.168.99.100.nip.io:443
http://eap-app-membersapp.192.168.99.100.nip.io:80
https://membersregistrationservice-3scale-apicast-staging.192.168.99.100.nip.io:443
http://3scale-admin:4515e009-ee60-4039-8d5a-1578ecec4349@sso-sso.192.168.99.100.nip.io/auth/realms/3scale

curl command to make the change (amp running on minishift):-

curl -v  -X PATCH "https://3scale-admin.192.168.99.100.nip.io/admin/api/services/5/proxy.xml" -d 'access_token=c373d6c0262d307aaae51dc7a102f53ec32d8f642f88a97687c8dfabac15d838&endpoint=https%3A%2F%2Fmembersregistrationservice-3scale-apicast-production.192.168.99.100.nip.io%3A443&api_backend=http%3A%2F%2Feap-app-membersapp.192.168.99.100.nip.io%3A80&sandbox_endpoint=https%3A%2F%2Fmembersregistrationservice-3scale-apicast-staging.192.168.99.100.nip.io%3A443' -k

Can use the following command to find the latest sandbox version to promote to production

curl -v  -X GET "https://3scale-admin.192.168.99.100.nip.io/admin/api/services/5/proxy/configs/sandbox/latest.json?access_token=c373d6c0262d307aaae51dc7a102f53ec32d8f642f88a97687c8dfabac15d838" -k

Promote to production command

curl -v  -X POST "https://3scale-admin.192.168.99.100.nip.io/admin/api/services/5/proxy/configs/sandbox/21/promote.json" -d 'access_token=c373d6c0262d307aaae51dc7a102f53ec32d8f642f88a97687c8dfabac15d838&to=production' -k

Update Members OAuth service = service 6

end point = https://membersregistrationservice-oauth-3scale-apicast-production.192.168.99.100.nip.io:443
back end = http://eap-app-membersapp.192.168.99.100.nip.io:80
sandbox https://membersregistrationservice-oauth-3scale-apicast-staging.apps.192.168.99.100.nip.io:443
SSO endpoint = http://3scale-admin:4515e009-ee60-4039-8d5a-1578ecec4349@sso-sso.192.168.99.100.nip.io/auth/realms/3scale

Update command

curl -v  -X PATCH "https://3scale-admin.192.168.99.100.nip.io/admin/api/services/6/proxy.xml" -d 'access_token=c373d6c0262d307aaae51dc7a102f53ec32d8f642f88a97687c8dfabac15d838&endpoint=https%3A%2F%2Fmembersregistrationservice-oauth-3scale-apicast-production.192.168.99.100.nip.io%3A443&api_backend=http%3A%2F%2Feap-app-membersapp.192.168.99.100.nip.io%3A80&sandbox_endpoint=https%3A%2F%2Fmembersregistrationservice-oauth-3scale-apicast-staging.apps.192.168.99.100.nip.io%3A443&oidc_issuer_endpoint=http%3A%2F%2F3scale-admin%3A4515e009-ee60-4039-8d5a-1578ecec4349%40sso-sso.192.168.99.100.nip.io%2Fauth%2Frealms%2F3scale' -k

find the latest sandbox version

curl -v  -X GET "https://3scale-admin.192.168.99.100.nip.io/admin/api/services/6/proxy/configs/sandbox/latest.json?access_token=c373d6c0262d307aaae51dc7a102f53ec32d8f642f88a97687c8dfabac15d838" -k

promote the latest sandbox version to production

curl -v  -X POST "https://3scale-admin.192.168.99.100.nip.io/admin/api/services/6/proxy/configs/sandbox/14/promote.json" -d 'access_token=c373d6c0262d307aaae51dc7a102f53ec32d8f642f88a97687c8dfabac15d838&to=production' -k





=======================================================================================
oc create secret docker-registry threescale-registry-auth \
  --docker-server=registry.redhat.io \
  --docker-username="1212394|3Scale" \
  --docker-password="eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJhOTgwNWQwNjE1MzA0ZmUyYTIzMmYwMTA3MWEwODZkNCJ9.bVEGo-1L4hkN1uqiR232XBlq4uOPuK800fep_v9e8Je_FtnCDexw2ehvc5JnFfCUWM0QTFoXoYA39DmTAxW1zfbUdoeJPNqqGbl4RnIVV-ALrldwzrP_9-VtKMI08IPDnAnpVShm7wZC7f41XYEPV_z4yZVpflO-E11GZV5lu_GfYHDh2RnXkgqFgJz1PSQN-J7lrpODaHa_wKF2iHH0ao_-34EdSb3eaaHw5Bd2NvYxMREpR3dF4YoAnYwDRAE5pMCJELe4Lo8mXGvYPAR7y7Dh2JpTAvSF94mxTkmpQJw9mBjV89RSf8uwUleLT1kvk2yGz15LJuG54Vy1mqyjSrhUPH3ekV3RK5y-1uYVGnOjcvoN5OoOGaCQw6T-LNlAQVcquhMXG-b4M4fv7IWsorU5D8Ou52QPajm-F059MVXOFo33GbnSASwz7_eH15y6XUWrwcpuLGiCObyB6bZCk4nAeaq3uZq2fgTlXMOOKWxDGnUW0mTVWg9KPQL57yrFvdJhbziqbNU20NiU4oLnO9Cp_rsav2u-_CybQqa7OyTwfnFEmm8AfEJmHPTnKZSTA-lItqWYYnrbpzMFmChZMtvVBIodJFqsOPeQe66h8Qjn3L0_xDVBFbdHFtT06xk_r8I6Kzi8T_L9cNFRqjLIVqZKnXn7Cu2XrGN26uiXoD8"