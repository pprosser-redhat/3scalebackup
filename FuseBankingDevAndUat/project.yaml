apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: project.yaml
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      group: com.redhat
      project: fisaccount-service
      provider: fabric8
      version: 0.0.1-SNAPSHOT
    name: fisaccount-service-s2i
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: fisaccount-service:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: fis-java-openshift:2.0
          namespace: openshift
      type: Source
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      group: com.redhat
      project: fisblockchain-service
      provider: fabric8
      version: 0.0.1-SNAPSHOT
    name: fisblockchain-service-s2i
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: fisblockchain-service:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: fis-java-openshift:2.0
          namespace: openshift
      type: Source
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      component: fisgateway-service
      group: quickstarts
      project: fisgateway-service
      provider: s2i
      template: fisgateway-service
      version: 1.0.0
    name: fisgateway-service
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: fisgateway-service:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /fisdemoaggregator
      git:
        ref: master
        uri: http://gogs-persistent.apps.demolab.local/Fuse_Integration_Services_Org/fisdemo.git
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: BUILD_LOGLEVEL
          value: "5"
        - name: ARTIFACT_DIR
        - name: MAVEN_ARGS
          value: package -DskipTests -Dfabric8.skip -e -B
        - name: MAVEN_ARGS_APPEND
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        forcePull: true
        from:
          kind: ImageStreamTag
          name: fis-java-openshift:2.0
          namespace: openshift
        incremental: true
      type: Source
    triggers:
    - github:
        secret: de77c355bf59fdb5
      type: GitHub
  status:
    lastVersion: 0
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      group: com.redhat
      project: fisaccount-service
      provider: fabric8
      version: 0.0.1-SNAPSHOT
    name: fisaccount-service
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      group: com.redhat
      project: fisblockchain-service
      provider: fabric8
      version: 0.0.1-SNAPSHOT
    name: fisblockchain-service
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 47
    labels:
      component: fisgateway-service
      group: quickstarts
      project: fisgateway-service
      provider: s2i
      template: fisgateway-service
      version: 1.0.0
    name: fisgateway-service
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: 3scale-gateway
    name: apicast
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: apicast
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: 3scale-gateway
          deploymentconfig: apicast
      spec:
        containers:
        - env:
          - name: THREESCALE_PORTAL_ENDPOINT
            valueFrom:
              secretKeyRef:
                key: password
                name: apicast-configuration-url-secret
          - name: THREESCALE_CONFIG_FILE
          - name: THREESCALE_DEPLOYMENT_ENV
            value: production
          - name: RESOLVER
          - name: APICAST_SERVICES
            value: "2555417755447"
          - name: APICAST_CONFIGURATION_LOADER
            value: lazy
          - name: APICAST_LOG_LEVEL
          - name: APICAST_PATH_ROUTING_ENABLED
            value: "false"
          - name: APICAST_RESPONSE_CODES
            value: "false"
          - name: APICAST_CONFIGURATION_CACHE
            value: "0"
          - name: REDIS_URL
          - name: APICAST_MANAGEMENT_API
            value: status
          - name: OPENSSL_VERIFY
            value: "false"
          image: 3scale-amp20/apicast-gateway:1.0-3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /status/live
              port: management
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: apicast
          ports:
          - containerPort: 8080
            name: proxy
            protocol: TCP
          - containerPort: 8090
            name: management
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /status/ready
              port: management
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: amq62-basic
      application: broker
      template: amq62-basic
      xpaas: 1.4.7
    name: broker-amq
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentConfig: broker-amq
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 0
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: amq62-basic
          application: broker
          deploymentConfig: broker-amq
        name: broker-amq
      spec:
        containers:
        - env:
          - name: AMQ_USER
            value: admin
          - name: AMQ_PASSWORD
            value: admin
          - name: AMQ_TRANSPORTS
            value: openwire
          - name: AMQ_QUEUES
          - name: AMQ_TOPICS
          - name: MQ_SERIALIZABLE_PACKAGES
          - name: AMQ_MESH_DISCOVERY_TYPE
            value: kube
          - name: AMQ_MESH_SERVICE_NAME
            value: broker-amq-tcp
          - name: AMQ_MESH_SERVICE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: AMQ_STORAGE_USAGE_LIMIT
            value: 100 gb
          - name: AMQ_QUEUE_MEMORY_LIMIT
          image: registry.access.redhat.com/jboss-amq-6/amq62-openshift@sha256:d4d938efa4dd6b35379c04d0633db5810ef26802b9067c7b8589cdfbf1bd947e
          imagePullPolicy: Always
          name: broker-amq
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 1883
            name: mqtt
            protocol: TCP
          - containerPort: 61613
            name: stomp
            protocol: TCP
          - containerPort: 61616
            name: tcp
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/amq/bin/readinessProbe.sh
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 60
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - broker-amq
        from:
          kind: ImageStreamTag
          name: jboss-amq-62:1.6
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      fabric8.io/git-branch: master
      fabric8.io/git-commit: 21778b8afb2d67f0c75992b5dab6ddbc78bd65ef
      fabric8.io/iconUrl: img/icons/camel.svg
      fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project=fisaccount-service&var-version=0.0.1-SNAPSHOT
    creationTimestamp: null
    generation: 1
    labels:
      group: com.redhat
      project: fisaccount-service
      provider: fabric8
      version: 0.0.1-SNAPSHOT
    name: fisaccount-service
  spec:
    replicas: 1
    selector:
      group: com.redhat
      project: fisaccount-service
      provider: fabric8
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 10800
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          fabric8.io/git-branch: master
          fabric8.io/git-commit: 21778b8afb2d67f0c75992b5dab6ddbc78bd65ef
          fabric8.io/iconUrl: img/icons/camel.svg
          fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project=fisaccount-service&var-version=0.0.1-SNAPSHOT
        creationTimestamp: null
        labels:
          group: com.redhat
          project: fisaccount-service
          provider: fabric8
          version: 0.0.1-SNAPSHOT
      spec:
        containers:
        - env:
          - name: MYSQL_SERVICE_NAME
            value: mysql
          - name: MYSQL_SERVICE_DATABASE
            value: sampledb
          - name: MYSQL_SERVICE_USERNAME
            value: dbuser
          - name: MYSQL_SERVICE_PASSWORD
            value: password
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: JAVA_APP_DIR
            value: /deployments
          image: docker-registry.default.svc:5000/fisdemo/fisaccount-service@sha256:1d59d5e3986ecd9e63f577f0fe51a800f631b8687089386a1c631d467e2868c8
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: spring-boot
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
            requests:
              cpu: 200m
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - spring-boot
        from:
          kind: ImageStreamTag
          name: fisaccount-service:latest
          namespace: fisdemo
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      fabric8.io/git-branch: master
      fabric8.io/git-commit: 21778b8afb2d67f0c75992b5dab6ddbc78bd65ef
      fabric8.io/iconUrl: img/icons/camel.svg
      fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project=fisblockchain-service&var-version=0.0.1-SNAPSHOT
    creationTimestamp: null
    generation: 1
    labels:
      group: com.redhat
      project: fisblockchain-service
      provider: fabric8
      version: 0.0.1-SNAPSHOT
    name: fisblockchain-service
  spec:
    replicas: 1
    selector:
      group: com.redhat
      project: fisblockchain-service
      provider: fabric8
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 10800
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          fabric8.io/git-branch: master
          fabric8.io/git-commit: 21778b8afb2d67f0c75992b5dab6ddbc78bd65ef
          fabric8.io/iconUrl: img/icons/camel.svg
          fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project=fisblockchain-service&var-version=0.0.1-SNAPSHOT
        creationTimestamp: null
        labels:
          group: com.redhat
          project: fisblockchain-service
          provider: fabric8
          version: 0.0.1-SNAPSHOT
      spec:
        containers:
        - env:
          - name: ACTIVEMQ_SERVICE_NAME
            value: broker-amq-tcp
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: JAVA_APP_DIR
            value: /deployments
          image: docker-registry.default.svc:5000/fisdemo/fisblockchain-service@sha256:7c46cd7996ab3040eaecb1a71ef543c7232b37de915d416746964f98d055291e
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: spring-boot
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
            requests:
              cpu: 200m
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - spring-boot
        from:
          kind: ImageStreamTag
          name: fisblockchain-service:latest
          namespace: fisdemo
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      component: fisgateway-service
      group: quickstarts
      project: fisgateway-service
      provider: s2i
      template: fisgateway-service
      version: 1.0.0
    name: fisgateway-service
  spec:
    replicas: 1
    selector:
      component: fisgateway-service
      deploymentconfig: fisgateway-service
      group: quickstarts
      project: fisgateway-service
      provider: s2i
      version: 1.0.0
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: fisgateway-service
          deploymentconfig: fisgateway-service
          group: quickstarts
          project: fisgateway-service
          provider: s2i
          version: 1.0.0
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker-registry.default.svc:5000/fisdemo/fisgateway-service@sha256:a4cd0135d2d26f060fa79e0c73f1d3436423a81fc5149ae1eb0a740f13ba04d6
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fisgateway-service
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: tcp
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        containerNames:
        - fisgateway-service
        from:
          kind: ImageStreamTag
          name: fisgateway-service:latest
          namespace: fisdemo
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      component: fisgateway-service-uat
      group: quickstarts
      project: fisgateway-service-uat
      provider: s2i
      template: fisgateway-service
      version: 1.0.0
    name: fisgateway-service-uat
  spec:
    replicas: 1
    selector:
      component: fisgateway-service-uat
      deploymentconfig: fisgateway-service-uat
      group: quickstarts
      project: fisgateway-service-uat
      provider: s2i
      version: 1.0.0
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: fisgateway-service-uat
          deploymentconfig: fisgateway-service-uat
          group: quickstarts
          project: fisgateway-service-uat
          provider: s2i
          version: 1.0.0
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker-registry.default.svc:5000/fisdemo/fisgateway-service@sha256:a4cd0135d2d26f060fa79e0c73f1d3436423a81fc5149ae1eb0a740f13ba04d6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: fisgateway-service-uat
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: tcp
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - fisgateway-service-uat
        from:
          kind: ImageStreamTag
          name: fisgateway-service:uatready
          namespace: fisdemo
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    generation: 1
    labels:
      app: mysql-ephemeral
      template: mysql-ephemeral-template
    name: mysql
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: mysql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: mysql-ephemeral
          name: mysql
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mysql
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mysql
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-root-password
                name: mysql
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: mysql
          image: registry.access.redhat.com/rhscl/mysql-57-rhel7@sha256:3abe773161b613b57f653c10ea1019ef7d9a05b2313390a8627be74df98dae77
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                -e 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: mysql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: mysql-data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mysql:5.7
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: 3scale-gateway
    name: apicast
  spec:
    host: fisdemo-dev.apps.demolab.local
    port:
      targetPort: proxy
    to:
      kind: Service
      name: apicast
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-02-09T15:03:07Z
        status: "True"
        type: Admitted
      host: fisdemo-dev.apps.demolab.local
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: fisgateway-service
      component: fisgateway-service
      group: quickstarts
      project: fisgateway-service
      provider: s2i
      template: fisgateway-service
      version: 1.0.0
    name: fisgateway-service
  spec:
    host: fisgateway-service-fisdemo.apps.demolab.local
    port:
      targetPort: 8080
    to:
      kind: Service
      name: fisgateway-service
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-02-07T16:16:20Z
        status: "True"
        type: Admitted
      host: fisgateway-service-fisdemo.apps.demolab.local
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: fisgateway-service
      component: fisgateway-service-uat
      group: quickstarts
      project: fisgateway-service-uat
      provider: s2i
      template: fisgateway-service
      version: 1.0.0
    name: fisgateway-service-uat
  spec:
    host: fisgateway-service-uat-fisdemo.apps.demolab.local
    port:
      targetPort: 8080
    to:
      kind: Service
      name: fisgateway-service-uat
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-02-07T16:16:20Z
        status: "True"
        type: Admitted
      host: fisgateway-service-uat-fisdemo.apps.demolab.local
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: 3scale-gateway
    name: apicast
  spec:
    ports:
    - name: proxy
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: management
      port: 8090
      protocol: TCP
      targetPort: 8090
    selector:
      deploymentconfig: apicast
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's AMQP port.
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: amq62-basic
      application: broker
      template: amq62-basic
      xpaas: 1.4.7
    name: broker-amq-amqp
  spec:
    ports:
    - port: 5672
      protocol: TCP
      targetPort: 5672
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's MQTT port.
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: amq62-basic
      application: broker
      template: amq62-basic
      xpaas: 1.4.7
    name: broker-amq-mqtt
  spec:
    ports:
    - port: 1883
      protocol: TCP
      targetPort: 1883
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's STOMP port.
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: amq62-basic
      application: broker
      template: amq62-basic
      xpaas: 1.4.7
    name: broker-amq-stomp
  spec:
    ports:
    - port: 61613
      protocol: TCP
      targetPort: 61613
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's OpenWire port.
      openshift.io/generated-by: OpenShiftNewApp
      service.alpha.openshift.io/dependencies: '[{"name": "broker-amq-amqp", "kind":
        "Service"},{"name": "broker-amq-mqtt", "kind": "Service"},{"name": "broker-amq-stomp",
        "kind": "Service"}]'
    creationTimestamp: null
    labels:
      app: amq62-basic
      application: broker
      template: amq62-basic
      xpaas: 1.4.7
    name: broker-amq-tcp
  spec:
    ports:
    - port: 61616
      protocol: TCP
      targetPort: 61616
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      fabric8.io/git-branch: master
      fabric8.io/git-commit: 21778b8afb2d67f0c75992b5dab6ddbc78bd65ef
      fabric8.io/iconUrl: img/icons/camel.svg
    creationTimestamp: null
    labels:
      expose: "true"
      group: com.redhat
      project: fisaccount-service
      provider: fabric8
      version: 0.0.1-SNAPSHOT
    name: fisaccount-service
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      group: com.redhat
      project: fisaccount-service
      provider: fabric8
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      fabric8.io/git-branch: master
      fabric8.io/git-commit: 21778b8afb2d67f0c75992b5dab6ddbc78bd65ef
      fabric8.io/iconUrl: img/icons/camel.svg
    creationTimestamp: null
    labels:
      expose: "true"
      group: com.redhat
      project: fisblockchain-service
      provider: fabric8
      version: 0.0.1-SNAPSHOT
    name: fisblockchain-service
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      group: com.redhat
      project: fisblockchain-service
      provider: fabric8
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      component: fisgateway-service
      group: quickstarts
      project: fisgateway-service
      provider: s2i
      template: fisgateway-service
      version: 1.0.0
    name: fisgateway-service
  spec:
    clusterIP: None
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      component: fisgateway-service
      group: quickstarts
      project: fisgateway-service
      provider: s2i
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      component: fisgateway-service-uat
      group: quickstarts
      project: fisgateway-service-uat
      provider: s2i
      template: fisgateway-service
      version: 1.0.0
    name: fisgateway-service-uat
  spec:
    clusterIP: None
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      component: fisgateway-service-uat
      group: quickstarts
      project: fisgateway-service-uat
      provider: s2i
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
    creationTimestamp: null
    labels:
      app: mysql-ephemeral
      template: mysql-ephemeral-template
    name: mysql
  spec:
    ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      name: mysql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
